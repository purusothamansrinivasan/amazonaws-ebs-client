/*
 * Amazon Elastic Block Store
 * <p>You can use the Amazon Elastic Block Store (Amazon EBS) direct APIs to create Amazon EBS snapshots, write data directly to your snapshots, read data on your snapshots, and identify the differences or changes between two snapshots. If youâ€™re an independent software vendor (ISV) who offers backup services for Amazon EBS, the EBS direct APIs make it more efficient and cost-effective to track incremental changes on your Amazon EBS volumes through snapshots. This can be done without having to create new volumes from snapshots, and then use Amazon Elastic Compute Cloud (Amazon EC2) instances to compare the differences.</p> <p>You can create incremental snapshots directly from data on-premises into volumes and the cloud to use for quick disaster recovery. With the ability to write and read snapshots, you can write your on-premises data to an snapshot during a disaster. Then after recovery, you can restore it back to Amazon Web Services or on-premises from the snapshot. You no longer need to build and maintain complex mechanisms to copy data to and from Amazon EBS.</p> <p>This API reference provides detailed information about the actions, data types, parameters, and errors of the EBS direct APIs. For more information about the elements that make up the EBS direct APIs, and examples of how to use them effectively, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-accessing-snapshot.html\">Accessing the Contents of an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas for the EBS direct APIs, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ebs-service.html\">Amazon Elastic Block Store Endpoints and Quotas</a> in the <i>Amazon Web Services General Reference</i>.</p>
 *
 * The version of the OpenAPI document: 2019-11-02
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Tag;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartSnapshotRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T13:56:00.934756+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class StartSnapshotRequest {
  public static final String SERIALIZED_NAME_VOLUME_SIZE = "VolumeSize";
  @SerializedName(SERIALIZED_NAME_VOLUME_SIZE)
  @javax.annotation.Nonnull
  private Integer volumeSize;

  public static final String SERIALIZED_NAME_PARENT_SNAPSHOT_ID = "ParentSnapshotId";
  @SerializedName(SERIALIZED_NAME_PARENT_SNAPSHOT_ID)
  @javax.annotation.Nullable
  private String parentSnapshotId;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private List<Tag> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "ClientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  @javax.annotation.Nullable
  private String clientToken;

  public static final String SERIALIZED_NAME_ENCRYPTED = "Encrypted";
  @SerializedName(SERIALIZED_NAME_ENCRYPTED)
  @javax.annotation.Nullable
  private Boolean encrypted;

  public static final String SERIALIZED_NAME_KMS_KEY_ARN = "KmsKeyArn";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ARN)
  @javax.annotation.Nullable
  private String kmsKeyArn;

  public static final String SERIALIZED_NAME_TIMEOUT = "Timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  @javax.annotation.Nullable
  private Integer timeout;

  public StartSnapshotRequest() {
  }

  public StartSnapshotRequest volumeSize(@javax.annotation.Nonnull Integer volumeSize) {
    this.volumeSize = volumeSize;
    return this;
  }

  /**
   * The size of the volume, in GiB. The maximum size is &lt;code&gt;65536&lt;/code&gt; GiB (64 TiB).
   * minimum: 1
   * @return volumeSize
   */
  @javax.annotation.Nonnull
  public Integer getVolumeSize() {
    return volumeSize;
  }

  public void setVolumeSize(@javax.annotation.Nonnull Integer volumeSize) {
    this.volumeSize = volumeSize;
  }


  public StartSnapshotRequest parentSnapshotId(@javax.annotation.Nullable String parentSnapshotId) {
    this.parentSnapshotId = parentSnapshotId;
    return this;
  }

  /**
   * &lt;p&gt;The ID of the parent snapshot. If there is no parent snapshot, or if you are creating the first snapshot for an on-premises volume, omit this parameter.&lt;/p&gt; &lt;p&gt;You can&#39;t specify &lt;b&gt;ParentSnapshotId&lt;/b&gt; and &lt;b&gt;Encrypted&lt;/b&gt; in the same request. If you specify both parameters, the request fails with &lt;code&gt;ValidationException&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The encryption status of the snapshot depends on the values that you specify for &lt;b&gt;Encrypted&lt;/b&gt;, &lt;b&gt;KmsKeyArn&lt;/b&gt;, and &lt;b&gt;ParentSnapshotId&lt;/b&gt;, and whether your Amazon Web Services account is enabled for &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default\&quot;&gt; encryption by default&lt;/a&gt;. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html\&quot;&gt; Using encryption&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;If you specify an encrypted parent snapshot, you must have permission to use the KMS key that was used to encrypt the parent snapshot. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapi-permissions.html#ebsapi-kms-permissions\&quot;&gt; Permissions to use Key Management Service keys&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/important&gt;
   * @return parentSnapshotId
   */
  @javax.annotation.Nullable
  public String getParentSnapshotId() {
    return parentSnapshotId;
  }

  public void setParentSnapshotId(@javax.annotation.Nullable String parentSnapshotId) {
    this.parentSnapshotId = parentSnapshotId;
  }


  public StartSnapshotRequest tags(@javax.annotation.Nullable List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public StartSnapshotRequest addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * The tags to apply to the snapshot.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable List<Tag> tags) {
    this.tags = tags;
  }


  public StartSnapshotRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * A description for the snapshot.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public StartSnapshotRequest clientToken(@javax.annotation.Nullable String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * &lt;p&gt;A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully. The subsequent retries with the same client token return the result from the original successful request and they have no additional effect.&lt;/p&gt; &lt;p&gt;If you do not specify a client token, one is automatically generated by the Amazon Web Services SDK.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-direct-api-idempotency.html\&quot;&gt; Idempotency for StartSnapshot API&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt;
   * @return clientToken
   */
  @javax.annotation.Nullable
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(@javax.annotation.Nullable String clientToken) {
    this.clientToken = clientToken;
  }


  public StartSnapshotRequest encrypted(@javax.annotation.Nullable Boolean encrypted) {
    this.encrypted = encrypted;
    return this;
  }

  /**
   * &lt;p&gt;Indicates whether to encrypt the snapshot.&lt;/p&gt; &lt;p&gt;You can&#39;t specify &lt;b&gt;Encrypted&lt;/b&gt; and &lt;b&gt; ParentSnapshotId&lt;/b&gt; in the same request. If you specify both parameters, the request fails with &lt;code&gt;ValidationException&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The encryption status of the snapshot depends on the values that you specify for &lt;b&gt;Encrypted&lt;/b&gt;, &lt;b&gt;KmsKeyArn&lt;/b&gt;, and &lt;b&gt;ParentSnapshotId&lt;/b&gt;, and whether your Amazon Web Services account is enabled for &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default\&quot;&gt; encryption by default&lt;/a&gt;. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html\&quot;&gt; Using encryption&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;To create an encrypted snapshot, you must have permission to use the KMS key. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapi-permissions.html#ebsapi-kms-permissions\&quot;&gt; Permissions to use Key Management Service keys&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/important&gt;
   * @return encrypted
   */
  @javax.annotation.Nullable
  public Boolean getEncrypted() {
    return encrypted;
  }

  public void setEncrypted(@javax.annotation.Nullable Boolean encrypted) {
    this.encrypted = encrypted;
  }


  public StartSnapshotRequest kmsKeyArn(@javax.annotation.Nullable String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
    return this;
  }

  /**
   * &lt;p&gt;The Amazon Resource Name (ARN) of the Key Management Service (KMS) key to be used to encrypt the snapshot.&lt;/p&gt; &lt;p&gt;The encryption status of the snapshot depends on the values that you specify for &lt;b&gt;Encrypted&lt;/b&gt;, &lt;b&gt;KmsKeyArn&lt;/b&gt;, and &lt;b&gt;ParentSnapshotId&lt;/b&gt;, and whether your Amazon Web Services account is enabled for &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default\&quot;&gt; encryption by default&lt;/a&gt;. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html\&quot;&gt; Using encryption&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;To create an encrypted snapshot, you must have permission to use the KMS key. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapi-permissions.html#ebsapi-kms-permissions\&quot;&gt; Permissions to use Key Management Service keys&lt;/a&gt; in the &lt;i&gt;Amazon Elastic Compute Cloud User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/important&gt;
   * @return kmsKeyArn
   */
  @javax.annotation.Nullable
  public String getKmsKeyArn() {
    return kmsKeyArn;
  }

  public void setKmsKeyArn(@javax.annotation.Nullable String kmsKeyArn) {
    this.kmsKeyArn = kmsKeyArn;
  }


  public StartSnapshotRequest timeout(@javax.annotation.Nullable Integer timeout) {
    this.timeout = timeout;
    return this;
  }

  /**
   * &lt;p&gt;The amount of time (in minutes) after which the snapshot is automatically cancelled if:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;No blocks are written to the snapshot.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The snapshot is not completed after writing the last block of data.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If no value is specified, the timeout defaults to &lt;code&gt;60&lt;/code&gt; minutes.&lt;/p&gt;
   * minimum: 10
   * maximum: 4320
   * @return timeout
   */
  @javax.annotation.Nullable
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(@javax.annotation.Nullable Integer timeout) {
    this.timeout = timeout;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartSnapshotRequest startSnapshotRequest = (StartSnapshotRequest) o;
    return Objects.equals(this.volumeSize, startSnapshotRequest.volumeSize) &&
        Objects.equals(this.parentSnapshotId, startSnapshotRequest.parentSnapshotId) &&
        Objects.equals(this.tags, startSnapshotRequest.tags) &&
        Objects.equals(this.description, startSnapshotRequest.description) &&
        Objects.equals(this.clientToken, startSnapshotRequest.clientToken) &&
        Objects.equals(this.encrypted, startSnapshotRequest.encrypted) &&
        Objects.equals(this.kmsKeyArn, startSnapshotRequest.kmsKeyArn) &&
        Objects.equals(this.timeout, startSnapshotRequest.timeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(volumeSize, parentSnapshotId, tags, description, clientToken, encrypted, kmsKeyArn, timeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartSnapshotRequest {\n");
    sb.append("    volumeSize: ").append(toIndentedString(volumeSize)).append("\n");
    sb.append("    parentSnapshotId: ").append(toIndentedString(parentSnapshotId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    kmsKeyArn: ").append("*").append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("VolumeSize", "ParentSnapshotId", "Tags", "Description", "ClientToken", "Encrypted", "KmsKeyArn", "Timeout"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("VolumeSize"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartSnapshotRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartSnapshotRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartSnapshotRequest is not found in the empty JSON string", StartSnapshotRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartSnapshotRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartSnapshotRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartSnapshotRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ParentSnapshotId") != null && !jsonObj.get("ParentSnapshotId").isJsonNull()) && !jsonObj.get("ParentSnapshotId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ParentSnapshotId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ParentSnapshotId").toString()));
      }
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("Tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Tags` to be an array in the JSON string but got `%s`", jsonObj.get("Tags").toString()));
          }

          // validate the optional field `Tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            Tag.validateJsonElement(jsonArraytags.get(i));
          };
        }
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("ClientToken") != null && !jsonObj.get("ClientToken").isJsonNull()) && !jsonObj.get("ClientToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientToken").toString()));
      }
      if ((jsonObj.get("KmsKeyArn") != null && !jsonObj.get("KmsKeyArn").isJsonNull()) && !jsonObj.get("KmsKeyArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KmsKeyArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KmsKeyArn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartSnapshotRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartSnapshotRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartSnapshotRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartSnapshotRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartSnapshotRequest>() {
           @Override
           public void write(JsonWriter out, StartSnapshotRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartSnapshotRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartSnapshotRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartSnapshotRequest
   * @throws IOException if the JSON string is invalid with respect to StartSnapshotRequest
   */
  public static StartSnapshotRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartSnapshotRequest.class);
  }

  /**
   * Convert an instance of StartSnapshotRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

